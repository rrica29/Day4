Open RSThayup
git clone https://github.com/ggenergg/RivanSecureCRTsolo
For easy RSThayup securecrt
git clone https://github.com/ggenergg/RST-DualStackRouting
Snapshot (Clock+)
IPv6 Addressing:
- IPv6 128 bit vs IPv4 32 bits
- IPv4 2^32 4,294,967,296 due to nat nagkasya
- IPv6 2^128 340 undecillion (36 zero)

IPv6 Addressing:
- 128-bit sya vs. IPv4 na 32 bits
- pitong hiwa sa IPv6 (colons :) VS sa IPv4 na apat ang hiwa (dots .), 

IPv4: 10.0.0.1 - 4 octets
IPv6: 	(0,1,2,3,4,5,6,7,8,9,a,b,c,d,e,f)
ex. fe80:1234:5678:90aa:bbbb:cccc:dddd:eeee

It allows zero omission (para mapag-igsi):
Continuous zeroes can be eliminated, in the place of those zeroes, simply use a double colon (::) symbol. 

ule One – Leading Zero Omission
Before: 1111 : 0123 : 0012 : 0001 : abcd : 0abc : 9891 : abcd
After : 1111 : 123  :   12 :    1 : abcd :  abc : 9891 : abcd
	(remove spaces nalang for proper addressing, spaces added for easy trace)

Rule Two: Continous Zero Omission
Before: 1111 : 0000 : 0000 : 0000 : 1234 : abcd : abcd : abcd
After:  1111           ::           1234 : abcd : abcd : abcd 
(pinagsama yung 2nd, 3rd, 4th hiwa na zeros into double-colon)
(remove spaces nalang for proper addressing, spaces added for easy trace)

Another Before: 1234 : 0000 : 0000 : 0000 : abcd : 0000: 0000 : beef
Another After:  1234           ::           abcd :   0 :  0   : beef
(remove spaces nalang for proper addressing, spaces added for easy trace)
(mas maraming magkakasamang zero will be ommitted to ::)
(1-time lang ubra mag double-colon, kaya sa remaining hiwa may single 0 na maiiwan)

Rule Three – Discontinuous Zero Omission
Before: 1111 : 0000 : 0000 : abcd : 0101 : 0000 : 1230 : f00d
After:  1111       ::        abcd :  101 :   0  : 1230 : f00d
	(remove spaces nalang for proper addressing, spaces added for easy trace)

You may address IPv6 like the previously common ways in IPv4...
Sa style ipv4: 192.168.1.10 /24
Sa style ipv6: 192:168:1::10 /64 (originally 0192:0168:0001:0000:0000:0000:0000:0010)

===================

Excercise:
1. a:c::/64
2. ::/0 [default route ip v6]
3. fe80::a:0:0:f/64
4. 2002:6500:3000::/64
5. ::1/128 [IPv6 Loopback]
6. ff::beef:a00a:aa0:0:0/8
ff:0:0:beef:a00a:aa0::/8
7. 2001:db8:1::ab9:C0A8:102/64
8. 1200::130F:0:0:9C0:876A:100B/64
9. 2041:1000:140F::875B:1B/96
10. 2001:4860:4860::8888/128 [google dns v6]


=======

show bgp ipv6 summ
show ipv6 route con | i C


ISP3#show alias
Exec mode aliases:
  h                     help
  lo                    logout
  p                     ping
  r                     resume
  s                     show
  u                     undebug
  un                    undebug
  w                     where
  bp                    show ip int brief | ex una
  sr                    show ip route
  cn                    show cdp nei
  sp                    show ip protocols
  bp6                   show ipv6 int brief | exc down
  sr6                   show ipv6 route
  sbs6                  show bgp ipv6 summ
  sc                    show run | sec

ATM virtual circuit configuration mode aliases:
  vbr                   vbr-nrt

ISP3#sbs6
BGP router identifier 33.33.33.33, local AS number 3
BGP table version is 1, main routing table version 1
8 network entries using 1312 bytes of memory
9 path entries using 900 bytes of memory
2/0 BGP path/bestpath attribute entries using 280 bytes of memory
8 BGP AS-PATH entries using 192 bytes of memory
0 BGP route-map cache entries using 0 bytes of memory
0 BGP filter-list cache entries using 0 bytes of memory
BGP using 2684 total bytes of memory
BGP activity 22/0 prefixes, 50/0 paths, scan interval 60 secs

Neighbor        V           AS MsgRcvd MsgSent   TblVer  InQ OutQ Up/Down  State/PfxRcd
B:1:2:B::2      4            2       0       0        1    0    0 never    Idle
B:1:33:B::1     4            1       0       0        1    0    0 never    Idle
B:3:4:B::5      4           45       5       2        1    0    0 00:00:19        5
% NOTE: This command is deprecated. Please use 'show bgp ipv6 unicast'

====

R1#ping 2001:4860:4860::8888

R1#sr6 bgp

========

BGP route manipulation
     Network          Next Hop            Metric LocPrf Weight Path
 *   0.0.0.0          209.9.9.3                0             0 3 i
 *                    207.7.7.2                0             0 2 i
 *>                   208.8.8.4                0             0 45 i
 *   8.8.8.8/32       209.9.9.3                              0 3 45 i
 *>                   208.8.8.4                              0 45 i
 *                    207.7.7.2                              0 2 45 i

R1#tracer 8.8.8.8
Type escape sequence to abort.
Tracing the route to 8.8.8.8
VRF info: (vrf in name/id, vrf out name/id)
  1 208.8.8.4 1 msec 4 msec 5 msec
  2 45.4.5.5 [AS 45] 5 msec *  0 msec


">" preferred route

====

Before we dig into modifications, let's review the default BGP path selection process. An in-depth analysis of the BGP path selection mechanism on Cisco IOS can be found here. A simplified summary of the process follows.

1.Prefer the route with the highest weight (a local, Cisco-proprietary parameter). *
2. Prefer the route with the highest local preference. *
3. Prefer locally-originated routes over those learned from a neighbor.
4. Prefer the route with the shortest AS path. *
5. Prefer IGP-learned routes over those with an unknown origin.
6. Prefer the route with the lowest MED (per AS). *
7. Prefer EBGP-learned routes over IBGP-learned routes.
8. Prefer the route whose next-hop address has the lowest IGP metric.
9. Multipath determination
10. If a best path exists, prefer it over newer routes.
11. Prefer the route from the router with the lowest router ID.
12. If the router IDs match, prefer the lowest neighbor IP address.

====

if down I1 port, pupunta kay I2 dahil maliit IP address (Number 12)
Number 1 manipulation line 1595
Rules to route maps:
#Route-Map: AMS = "Access List, Match, Set" easier thru practice!

R1#sh ip bgp 55.55.55.55
BGP routing table entry for 55.55.55.55/32, version 33
Paths: (3 available, best #2, table default)     <<<< number 2

R1#tracer 55.55.55.55 
Type escape sequence to abort.
Tracing the route to 55.55.55.55
VRF info: (vrf in name/id, vrf out name/id)
  1 209.9.9.3 1 msec 5 msec 5 msec
  2 35.3.5.5 [AS 3] 5 msec *  1 msec
R1#tracer 8.8.8.8    
Type escape sequence to abort.
Tracing the route to 8.8.8.8
VRF info: (vrf in name/id, vrf out name/id)
  1 209.9.9.3 0 msec 0 msec 1 msec
  2 35.3.5.5 [AS 3] 0 msec *  0 msec
R1# 


========

If multiple
AMS (line 1657 to 1945)
If iikot I1 > I2
1966 - 1977

R1#tracer 22.22.22.22
Type escape sequence to abort.
Tracing the route to 22.22.22.22
VRF info: (vrf in name/id, vrf out name/id)
  1 208.8.8.4 0 msec 0 msec 0 msec
  2 24.2.4.2 [AS 2] 1 msec *  1 msec
R1#
R1#tracer 33.33.33.33
Type escape sequence to abort.
Tracing the route to 33.33.33.33
VRF info: (vrf in name/id, vrf out name/id)
  1 208.8.8.4 1 msec 0 msec 1 msec
  2 45.4.5.5 [AS 45] 1 msec 1 msec 0 msec
  3 35.3.5.3 [AS 3] 0 msec *  1 msec


=======

Local preference line 2045
#Keyword: Local
#Req: Must have same AS number
#NOTE: Local Pref >= 100: IDAAN MO SA AKIN
#NOTE: Local Pref < 100: WAG MO IDAAN SA AKIN
#Keyword sa Local Pref: AS Number

If blocked like disneyplus
We want to Tell ISP4, that we have:
41.41.41.41 local pref of 414
and
42.42.42.42 local pref of 424
and
43.43.43.43 MUST be BLOCKED!!! (looks familiar??? parang sa Disney Plus noong 2021 na blocked pa sa pinas)
and			       (meaning the BGP can be responsible for blocking Ph WAN IP, not always FW)
everything Else is normal:

!AMS pa rin :)

line 2123 merong deny

ANOTHER TEST Line 2177
Double check ACL on line  2206

==========

Line 2360
The power of ASPATH, you can tell other routers to use other ISPs  (not yours!) to be
routed: in this case, ISP1 and ISP3 will tell R1 to use ISP2 a lot!!!
Inalis I2
line 2454

=====

Line 2628
Multi-Exit Discriminator (MED): HALIK HUDAS.
MED: multi exit discrimator is another path selection
     attribute that tells Another ISP AS (normally u have
     no control on them) on how to get to another.
Kung san may MED or metric, dun hindi dadaan



	 